{"version":3,"sources":["components/Post.js","components/Header.js","components/SideCard.js","Pages.js","App.js","serviceWorker.js","index.js"],"names":["Post","react_default","a","createElement","react","className","this","props","content","Component","Header","i","onHeaderClick","_this","reactstrap_es","fixed","color","light","expand","style","height","noGutters","navbar","href","src","alt","width","onClick","handleClick","nav","inNavbar","caret","right","header","disabled","divider","React","urls","goSomewhere","url","Math","floor","random","length","window","location","SideCard","top","fontSize","pages","aboutme","whiteSpace","home","experience","skills","projects","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","page","bind","assertThisInitialized","pagename","setState","document","title","components_Header","xs","order","md","size","tag","components_SideCard","offset","components_Post","Boolean","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.34b3c796.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\r\n\r\nclass Post extends Component {\r\n  \r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        {<div className=\"position-relative\">\r\n        \r\n          <span className=\"d-block pb-4 h2 text-dark border-bottom border-gray\">Hola! Soy Bharat Mukheja</span>\r\n          \r\n          {this.props.content};\r\n          \r\n        </div> }\r\n      </Fragment>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default Post;","import React from 'react';\r\n\r\nimport {\r\n  Container, Row, Col, Form, Input, Button, Navbar, Nav,\r\n  NavbarBrand, NavLink, NavItem, UncontrolledDropdown,\r\n  DropdownToggle, DropdownMenu, DropdownItem\r\n} from 'reactstrap';\r\n\r\nconst AVATAR = 'https://media.licdn.com/dms/image/C5603AQE7jVylA8rlJg/profile-displayphoto-shrink_200_200/0?e=1546473600&v=beta&t=0yPE79zbpMjlnctJGaNr0_e97qaFizsH32bf9sCBPzU';\r\n\r\nclass Header extends React.Component {\r\n  handleClick(i) {\r\n    this.props.onHeaderClick(i)\r\n  }\r\n\r\nrender(){ \r\n  return (\r\n  <header>\r\n    <Navbar fixed=\"top\" color=\"light\" light expand=\"xs\" className=\"border-bottom border-gray bg-white\" style={{ height: 80 }}>\r\n    \r\n      <Container>\r\n        <Row noGutters className=\"position-relative w-100 align-items-center\">\r\n        \r\n          <Col className=\"d-none d-lg-flex justify-content-start\">\r\n            <Nav className=\"mrx-auto\" navbar>\r\n            \r\n              <NavItem className=\"d-flex align-items-center\">\r\n                <NavLink className=\"font-weight-bold\" href=\"/\">\r\n                  <img src={AVATAR} alt=\"avatar\" className=\"img-fluid rounded-circle\" style={{ width: 36 }} />\r\n                </NavLink>\r\n              </NavItem>\r\n              \r\n              <NavItem className=\"d-flex align-items-center\">\r\n                <NavLink className=\"font-weight-bold\" onClick={() => this.handleClick(\"home\")}>Home</NavLink>\r\n              </NavItem>\r\n              \r\n              <NavItem className=\"d-flex align-items-center\">\r\n                <NavLink className=\"font-weight-bold\" onClick={() => this.handleClick(\"aboutme\")}>About Me</NavLink>\r\n              </NavItem>\r\n\r\n              <NavItem className=\"d-flex align-items-center\">\r\n                <NavLink className=\"font-weight-bold\" href=\"static/Bharat_Data Science.pdf\">Portfolio</NavLink>\r\n              </NavItem>\r\n\r\n              <NavItem className=\"d-flex align-items-center\">\r\n                <NavLink className=\"font-weight-bold\" onClick={() => this.handleClick(\"experience\")}>Experience</NavLink>\r\n              </NavItem>\r\n\r\n              <NavItem className=\"d-flex align-items-center\">\r\n                <NavLink className=\"font-weight-bold\" onClick={() => this.handleClick(\"skills\")}>Skills</NavLink>\r\n              </NavItem>\r\n\r\n              <NavItem className=\"d-flex align-items-center\">\r\n                <NavLink className=\"font-weight-bold\" onClick={() => this.handleClick(\"projects\")}>Projects</NavLink>\r\n              </NavItem>\r\n\r\n              <UncontrolledDropdown className=\"d-flex align-items-center\" nav inNavbar>\r\n                <DropdownToggle className=\"font-weight-bold\" nav caret>Links</DropdownToggle>\r\n                <DropdownMenu right>\r\n                  <DropdownItem className=\"font-weight-bold text-secondary text-uppercase\" header disabled>Get to know me</DropdownItem>\r\n                  <DropdownItem divider />\r\n                  <DropdownItem href=\"https://www.linkedin.com/in/bmukheja\">LinkedIn</DropdownItem>\r\n                  <DropdownItem href=\"https://www.github.com/bmukheja\">Github</DropdownItem>\r\n                  <DropdownItem href=\"https://facebook.com/bmukheja\">Facebook</DropdownItem>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n              \r\n              <NavItem className=\"d-flex align-items-center\">\r\n                <NavLink className=\"font-weight-bold\" href=\"mailto:bharat.mukheja2017@gmail.com\">Contact Me</NavLink>\r\n              </NavItem>\r\n\r\n            </Nav>\r\n          </Col>\r\n          \r\n          \r\n          \r\n          \r\n          \r\n        </Row>\r\n      </Container>\r\n      \r\n    </Navbar>\r\n  </header>\r\n);\r\n}\r\n}\r\n\r\nexport default Header;","import React, { Fragment } from 'react';\r\n\r\nimport {\r\n    Button, UncontrolledAlert, Card, CardImg, CardBody,\r\n    CardTitle, CardSubtitle, CardText, Container, Row\r\n} from 'reactstrap';\r\n\r\nconst BANNER = 'static/Sidebar Picture.jpg';\r\n\r\nvar urls = [\r\n    \"https://www.github.com/bmukheja\",\r\n    \"https://linkedin.com/in/bmukheja\"\r\n];\r\n\r\nfunction goSomewhere() {\r\n    var url = urls[Math.floor(Math.random()*urls.length)];\r\n    window.location = url; // redirect\r\n}\r\n\r\nconst SideCard = () => (\r\n    <Fragment>\r\n\r\n        <UncontrolledAlert color=\"info\" className=\"d-none d-lg-block\">\r\n            <strong>Download resume from the above link.</strong>\r\n        </UncontrolledAlert>\r\n\r\n        <Card>\r\n            <CardImg top width=\"100%\" src={BANNER} alt=\"banner\" />\r\n            <CardBody>\r\n                <CardTitle className=\"h3 mb-2 pt-2 font-weight-bold text-secondary\">Bharat Mukheja</CardTitle>\r\n                <CardSubtitle className=\"text-secondary mb-2 font-weight-medium text-uppercase\" style={{ fontSize: '1.2rem' }}>Machine Learning Engineer</CardSubtitle>\r\n                <CardSubtitle className=\"text-secondary mb-3 font-weight-light text-uppercase\" style={{ fontSize: '0.8rem' }}>Mountain View, CA</CardSubtitle>\r\n                <CardText className=\"text-secondary mb-4\" style={{ fontSize: '0.75rem' }}>Machine Learning Engineer learning new hacks one day at a time. Full stack enthusiast. Hacking stuffs @bmukheja.</CardText>\r\n                <Container>\r\n                    <Row className=\"d-none d-lg-flex justify-content-start mb-2\">\r\n                        <Button color=\"success\" className=\"font-weight-bold\" href=\"https://github.com/bmukheja\">Check Github</Button>\r\n                    </Row>\r\n                    <Row className=\"d-none d-lg-flex justify-content-start mb-2\">\r\n                        <Button color=\"primary\" className=\"font-weight-bold\" href=\"#\" onClick={goSomewhere}>I'm feeling lucky</Button>\r\n                    </Row>\r\n                </Container>\r\n            </CardBody>\r\n        </Card>\r\n\r\n    </Fragment>\r\n);\r\n\r\nexport default SideCard;","import React from 'react';\r\n\r\nvar home_writeup = \"I am a computer science engineer interested in Machine Learning, Data Science, Backend Development and Product Development. I want to make computers smarter and useful in solving daily problems and help us in a smarter way. You can find the list of the projects which I have worked on in the projects tab. I am actively looking for job opportunities with organizations who can leverage my skills and experience and at the same time provide me with a challenge. Offline I am great person to hang out with, my hobbies include playing racquetball, instagramming, travelling, public speaking, working out, photography and singing.\\n\\nSelect any tab to know about me and my skills.\"\r\n\r\nvar aboutme_writeup = \"My name is Bharat Mukheja. I am a passionate Software Developer with expertise in Full Stack Web Development and Data Analysis. My passion for computers started early in my life. After my first tryst with computers, which started with Photoshop, I realized that I had found my first and true love. I primarily used it to create various shapes and produce line graphics. I gradually moved on to the ‘BASIC’ language. I took to computer programming like a fish to water and very soon it became my career path. I was very clear early on that I would become a computer professional.\\n\\nI did my Bachelors from IIT Roorkee in Electronics and Communication Engineering, which can be considered as my first formal introduciton to high level programming concepts and skills. The courses which I took kept my passion growing and the hunger to learn more never stopped on growing.\\nCourseWork - Object Oriented Programming, Data Structures, Computer Networks, Software Engineering.\\n\\nNew place, new university, new course work did not hold me back form achieving my dream of becoming a Software Developer and I came to the United States to achieve this dream.\\n\\nI graduated with Masters in Computer Science from North Carolina State University in May 2018, with expertise in Data Science.\\nCourseWork - Algorithms, Automated Learning and Data Analysis, Algorithms for Data Guided Business Intelligence, Database Management System, Foundations of Data Science, Internet Protocols, Data Driven Decision Making, Computer Vision.\\n\\nTo know more about my experience please switch to the experience tab.\"\r\n\r\nvar exp_writeup = \"I am working with Nokia for the past 1 year to develop their Analytics and Visualisation pipeline, adding network stats analytics. My tasks and duties at Nokia are as follows -\\n\\n• Network Stats Pipeline: Developed Stats collection pipeline intended for Resource requirement prediction, SLA\\noptimization, Cost cutting, Anomaly Detection, and Real-Time alarms.\\n• Stats Visualization: Built visualization for the above\\n• Functional Testing Suite: A functional testing suite in Python to replace the old Tcl based testing framework\\n\\n\\nI have worked as IT Manager at a startup, Aaramshop. I was hired specifically to setup their analytics infrastructure, and I successfully setup all the required, alongwith adding analytics services which brought revenue and increased productivity. This was in New Delhi from Feb 2016 to July 2016. My tasks and duties were as follows\\n\\n• Product Recommendation: Developed Product Recommendation service using Machine Learning algorithm\\n• Sales Analytics: Sales analytics API from sales database\\n• Analytics Visualization: Analytics visualization for the above sales analytics\\n\\n\\nI have worked as Network Consulting Engineer at Cisco from July 2013 till Sep 2015. My tasks and duties were as follows\\n\\n• Testing - Built a pre-deployment testing suite in C/C++ for Cisco UC products. Utilized VMware ESXi API.\\n• Customer Onboarding: Contributed to existing customer onboarding and developed a few products:\\nTicketing system for automatic ticketing of on-site customers of clients with support for automatic emails and\\nstatus check.\\nTest cases for measuring capacity and health resources of Cisco VMs on customer manager data center\\n• Reporting and visualization of tests and health checks and quarterly presentation.\\n• Customer issue handling over phone calls and video conferencing\"\r\n\r\nvar skills_writeup = \"I have broad experience across a wide spectrum of software programming languages, technology stacks, databases and tools.\\n\\nComputer Languages:\\n\\nC++\\nPython\\nJavaScript\\n\\nData Science:\\n\\nR\\nSQL\\nApache Kafka\\nApache Spark\\nDoc2Vec\\nNetworkX\\nNumpy\\nScipy\\nPandas\\nMatplotlib\\nNLTK\\nScikit-Learn\\n\\nWeb Developement:\\n\\nHTML\\nCSS\\nBootStrap\\nNodeJS\\nReactJS\\nAWS\\nMap Reduce\\n\\nDistributed Systems:\\n\\nHadoop\\nAmazon EC2\"\r\n\r\nvar projects_writeup = \"Data Science:\\n\\nIMDb Rating and Gross Income Prediction\\nDeveloped a tool for cleaning of IMDb's data and prediction of rating for upcoming movies based on the attributes like actor’s rating, director’s rating, genre using machine learning techniques such as Decision tree, K means Clustering and Neural Networks.\\n\\nBitcoin Price Variation Prediction\\nUtilized machine learning technique of Bayesian Regression in Python to predict the variation in the cryptocurrency useful for bitcoin trading\\n\\nMarket Segmentation\\nDeveloped an application to predict the communities using Facebook’s data using Python, useful in detecting the group of people with similar taste, helpful in recommendation of friends, network analysis and visualization based on the algorithm Structure-Attribute Clustering.\\n\\nYelp Data Analysis\\nBuilt an application to predict the popularity of a restaurant at a particular day and time based on time series analysis on the checkin dataset provided by Yelp using Python and MongoDB. The application also predicts the performance of the particular business based ont he sentiments of reviews it recieves over a period of time. Fake reviews and ratings affect the final rating and poplarity of a business. Application also tries to detect fake users and users which kept under the scanner because their behaviour is a bit weird based on their social network, their review history and smillarity of the reviews.\\n\\nOverlapping Community Detection\\nImplemented the algorithm from the paper Efficient Identification of Overlapping Communities to detect overlapping communities in social networks. the algorithm uses the communication graph to find the structure of the communities. This knowledge about the structure is helpful in descovering groups of actors that hide their commmunications, possibly for malicious reasons. the algorithm used produces clusters of a comparable or better quality. The dataset used was Amazon's community graph.\\n\\nVirus Propogation\\nImplemented and algorithm to determine wheather a virus will result in an epidemic or it will die quickly. for a given network of individuals, where the edges represent who can potentially infect whom, the rate of porpogation of a virus across the network depends on the connectivity of the network and on the propogation model of the virus. The result have important inplication for the design and evaluation of immunization policies and can be applied to many problems, such as minimiing the spread od malware in computer networks or maximizing the spread od a makrketing campaign across a social network.\\n\\nAnomaly Detection in Time Evolving Networks\\nAnomaly detection refers to the problem of finding patterns in data which fail to conform to the expected standard. These anomalous patterns is useful to a number of business applications, such as identifying trending topics on social media and suspicious traffic on computer networks, as well as detecting credit card fraud, insurance fraud, and eauction fraud. Implemented the algorithm from the paper: NetSimile: A Scalable Approach to Size-Independent Network Similarity\\n\\nDatabase:\\n\\nCourse Registration System\\nDeveloped an application for managing course registration, financial details, administrator functionalities while utilizing the concepts of relational databases using Java and Oracle with extensive use of procedures and triggers.\\n\\nPaperless Hospital Management System\\nDeveloped an application for managinng the functionalities of Hospital without the use of paper. The application give the ability to patient, doctors, the pharmacy and diagnostic center to access data. Users could access their medical records whenever they want. Doctors coudl easily look up at the patient's previous records to provide the perfect treatement. Doctors can even access the patients medical records, prescriptions and all the scan details can be added by the diadnostuc center to the patient's account directly, reducing the need of carrying th reports and prescriptions.\\n\\nLibrary Management System\\nDeveloped an application to manage the functionalities of library such as book lending,book availability, reminders for due dates, finincials. Library Staff and users can login and utilize the system to efficiently manage the functionalities of the library\"\r\n\r\nexport const pages = { \r\n    aboutme: <article className=\"pt-5 text-secondary text-justify\" style={{ fontSize: '1.2rem', whiteSpace: 'pre-line' }}>{aboutme_writeup}</article>, \r\n    home: <article className=\"pt-5 text-secondary text-justify\" style={{ fontSize: '1.2rem', whiteSpace: 'pre-line' }}>{home_writeup}</article>, \r\n    experience: <article className=\"pt-5 text-secondary text-justify\" style={{ fontSize: '1.0rem', whiteSpace: 'pre-line' }}>{exp_writeup}</article>,  \r\n    skills: <article className=\"pt-5 text-secondary text-justify\" style={{ fontSize: '1.0rem', whiteSpace: 'pre-line' }}>{skills_writeup}</article>, \r\n    projects: <article className=\"pt-5 text-secondary text-justify\" style={{ fontSize: '1.0rem', whiteSpace: 'pre-line' }}>{projects_writeup}</article>, \r\n};","import React, { Fragment, Component } from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\nimport Post from './components/Post';\r\nimport Header from './components/Header';\r\nimport SideCard from './components/SideCard';\r\n\r\nimport {pages} from './Pages';\r\n\r\nclass App extends Component {\r\n  \r\n  constructor(){\r\n    super();\r\n    this.onHeaderClick = this.onHeaderClick.bind(this);\r\n  }\r\n  state = {page:pages.home}\r\n\r\n  onHeaderClick(pagename){\r\n    this.setState({page:pages[pagename]});\r\n  }\r\n\r\n  componentDidMount(){\r\n    document.title = \"About Me\"\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n\r\n        <Header onHeaderClick={this.onHeaderClick}/>\r\n\r\n        <main className=\"my-5 py-5\">\r\n          <Container className=\"px-0\">\r\n            <Row noGutters className=\"pt-2 pt-md-5 w-100 px-4 px-xl-0 position-relative\">\r\n\r\n              <Col xs={{ order: 2 }} md={{ size: 4, order: 1 }} tag=\"aside\" className=\"pb-5 mb-5 pb-md-0 mb-md-0 mx-auto mx-md-0\">\r\n                <SideCard />\r\n              </Col>\r\n\r\n              <Col xs={{ order: 1 }} md={{ size: 7, offset: 1 }} tag=\"section\" className=\"py-5 mb-5 py-md-0 mb-md-0\">\r\n                <Post content={this.state.page} />\r\n              </Col>\r\n\r\n            </Row>\r\n          </Container>\r\n        </main>\r\n\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}